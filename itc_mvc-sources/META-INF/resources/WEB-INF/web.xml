<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<!-- <name>itc-mvc</name> -->
	<!-- ======================== 单点登录开始 ======================== -->
	<!-- 用于单点退出，该过滤器用于实现单点登出功能，可选配置--> 
    <filter>  
       <filter-name>CAS Single Sign Out Filter</filter-name>  
       <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>  
    </filter>
    
	<!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<listener>  
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>  
	</listener>

	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
	<filter>
		<filter-name>CASFilter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://kerberos.dms.yudean.com:8443/cas/</param-value>
			<!--这里的server是服务端的IP-->
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://localhost:8080</param-value><!--客户端-->
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CASFilter</filter-name>
		<url-pattern>/eam_cas</url-pattern>
	</filter-mapping>

	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://kerberos.dms.yudean.com:8443/cas/</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://localhost:8080</param-value><!--客户端-->
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/eam_cas</url-pattern>
	</filter-mapping>
	<!--
		该过滤器负责实现HttpServletRequest请求的包裹，
		比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。
	-->
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>
			org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/eam_cas</url-pattern>
	</filter-mapping>

	<!--
		该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
		比如AssertionHolder.getAssertion().getPrincipal().getName()。
	-->
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/eam_cas</url-pattern>
	</filter-mapping>
	<!-- ======================== 单点登录结束 ======================== -->
	
  <!-- 是系统启动时执行的方法，先于spring容器执行初始化  -->
  <listener>
  	   <listener-class>com.yudean.mvc.listener.ApplicationContextListener</listener-class>
  </listener>
  <listener>
  	   <listener-class>com.yudean.mvc.context.MvcContext</listener-class>
  </listener>
  
  <!-- 权限模块上下文监听 -->
<!--   <listener> -->
<!--     <listener-class>com.yudean.itc.servlet.ApplicationStartListener</listener-class> -->
<!--   </listener> -->
  <context-param><!-- 标记当前系统的运行状态location：探查本地分支， container:不探查本地分支 -->
    <param-name>MvcRunContext</param-name>
    <param-value>location</param-value>
  </context-param>
  <!-- spring容器初始化  -->
  <listener>
    <listener-class>com.yudean.mvc.listener.MvcContextLoaderListener</listener-class>
  </listener>
  <listener>  
    <listener-class>com.yudean.mvc.listener.MvcSessionListener</listener-class>  
  </listener>
  <!-- Spring框架启动时扫描beans（容器）的路径，  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	classpath:springex/web/framework-web.xml
    </param-value>
  </context-param>
  <!-- 在spring构建完容器之后初始化，必须实现TimssInitClassAfterContextBuildInterface接口多个启动类,分割 
  	命名规则为initClassAfterContextBuild-模块名称-config 如initClassAfterContextBuild-framework-config -->
  <context-param>
    <param-name>initClassAfterContextBuild-framework-config</param-name>
    <param-value>
    	com.yudean.mvc.context.MvcContextListener,
    	com.yudean.mvc.exception.ExceptionFramework,
    	com.yudean.mvc.listener.InitItcFramework,
    	com.yudean.mvc.util.FrameworkServiceBranchUtil,
    	com.yudean.mvc.util.FrameworkViewBranchUtil
    </param-value>
  </context-param>
  <context-param>
    <param-name>framework-logExceptionPath</param-name>
    <param-value>config/exception/exception.xml</param-value>
  </context-param>
  <context-param>
    <param-name>framework-logConfigPath</param-name>
    <param-value>config/log/log4j.xml</param-value>
  </context-param>
  <!-- Timss框架启动时加载beans（容器）的路径. 命名规则为includeBeans-模块名称-config，如果包含多个，用,号分割，文档路径必须在/config/context/中 -->
<!--   <context-param> -->
<!--     <param-name>includeBeans-framework-config</param-name> -->
<!--     <param-value> -->
<!--     	/config/context/applicationContext-framework-base.xml, -->
<!--     	/config/context/applicationContext*.xml, -->
<!--     	/config/mvc/spring-core-mvc.xml -->
<!--     </param-value> -->
<!--   </context-param> -->
  
  <servlet>
    <servlet-name>springServlet</servlet-name>
    <servlet-class>com.yudean.mvc.servlet.MvcDispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:/config/mvc/spring*.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springServlet</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>UserServlet</display-name>
    <servlet-name>UserServlet</servlet-name>
    <servlet-class>com.yudean.itc.servlet.UserServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>UserServlet</servlet-name>
    <url-pattern>/user</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <description></description>
    <display-name>LoginServlet</display-name>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>com.yudean.itc.servlet.LoginServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>
  
  <servlet>
    <description></description>
    <display-name>ResourceServlet</display-name>
    <servlet-name>ResourceServlet</servlet-name>
    <servlet-class>com.yudean.itc.servlet.ResourceServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ResourceServlet</servlet-name>
    <url-pattern>/res</url-pattern>
  </servlet-mapping>
  
  
  <servlet>
    <description></description>
    <display-name>CookieloginServlet</display-name>
    <servlet-name>CookieloginServlet</servlet-name>
    <servlet-class>com.yudean.itc.servlet.CookieloginServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>CookieloginServlet</servlet-name>
    <url-pattern>/CookieloginServlet</url-pattern>
  </servlet-mapping>
  
  <!-- 通用文件上传/下载接口 -->
  <servlet>
    <description></description>
    <display-name>FileUploadServlet</display-name>
    <servlet-name>FileUploadServlet</servlet-name>
    <servlet-class>com.yudean.itc.servlet.FileUploadServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>FileUploadServlet</servlet-name>
    <url-pattern>/upload</url-pattern>
  </servlet-mapping>
  
  <!-- 文档转换系统调用公开接口 -->
  <servlet>
    <servlet-name>FileUploadCallBackServlet</servlet-name>
    <servlet-class>com.yudean.itc.servlet.FileUploadCallBackServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>FileUploadCallBackServlet</servlet-name>
    <url-pattern>/notify</url-pattern>
  </servlet-mapping>

    <!-- 附件预览 -->
    <servlet>
        <servlet-name>AttachmentPreviewServlet</servlet-name>
        <servlet-class>com.yudean.itc.servlet.AttachmentPreviewServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AttachmentPreviewServlet</servlet-name>
        <url-pattern>/attchmentPreview</url-pattern>
    </servlet-mapping>

  <!-- druil监控页面 -->
  <servlet>
      <servlet-name>DruidStatView</servlet-name>
      <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
      <init-param>  
	       <!-- 允许清空统计数据 -->  
	       <param-name>resetEnable</param-name>  
	       <param-value>true</param-value>  
	   </init-param>
	   <init-param>  
	        <!-- 用户名：可以登录到druid后台修改 -->  
	        <param-name>loginUsername</param-name>  
	        <param-value>druid_monitor</param-value>  
	    </init-param>  
	    <init-param>  
	        <!-- 密码 -->  
	        <param-name>loginPassword</param-name>  
	        <param-value>timssp@ssw0rd</param-value>  
	    </init-param>  
  </servlet>
  <servlet-mapping>
      <servlet-name>DruidStatView</servlet-name>
      <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>

  <!-- 权限初始化 以及自动清理未关联附件 -->
  <listener>
    <listener-class>com.yudean.itc.servlet.ApplicationStartListener</listener-class>
  </listener>
  <!-- 欢迎页面 -->
  <welcome-file-list>
    <welcome-file>CookieloginServlet</welcome-file>
  </welcome-file-list>
  <filter>
       <filter-name>CharacterEncodingFilter</filter-name>
       <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
       <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
       </init-param>
   </filter>
   <filter-mapping>
       <filter-name>CharacterEncodingFilter</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping>
   <filter>
      <filter-name>MvcEncodingFilter</filter-name>
      <filter-class>com.yudean.mvc.filter.MvcCharacterEncodingFilter</filter-class>
   </filter>
   <filter-mapping>
       <filter-name>MvcEncodingFilter</filter-name>
       <url-pattern>*.do</url-pattern>
   </filter-mapping>
   <filter>
      <filter-name>MvcFilter</filter-name>
      <filter-class>com.yudean.mvc.filter.MvcFilter</filter-class>
   </filter>
   <filter-mapping>
       <filter-name>MvcFilter</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping>

	<!-- druil web 监控配置-->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
		<init-param>  
	        <param-name>sessionStatEnable</param-name>  
	        <param-value>true</param-value>  
	    </init-param> 	 
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

   <error-page>
        <error-code>404</error-code>
        <location>/page/mvc/error/error_404.jsp</location>
   </error-page>
   <error-page>
        <error-code>500</error-code>
        <location>/page/mvc/error/error_500.jsp</location>
   </error-page>
  <!-- 设置账户SESSION过期时间 -->
  <session-config> 
  	<session-timeout>30</session-timeout> 
  </session-config> 
</web-app>
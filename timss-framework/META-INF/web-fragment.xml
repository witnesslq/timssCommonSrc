<?xml version="1.0" encoding="utf-8"?>

<web-fragment xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd">  
  <!-- 是系统启动时执行的方法，先于spring容器执行初始化  -->  
  <listener> 
    <listener-class>com.timss.framework.mvc.listener.ApplicationContextListener</listener-class> 
  </listener>  
  <listener> 
    <listener-class>com.timss.framework.mvc.context.TimssContext</listener-class> 
  </listener>  
  <!-- 权限模块上下文监听 -->  
  <!--   <listener> -->  
  <!--     <listener-class>com.yudean.itc.servlet.ApplicationStartListener</listener-class> -->  
  <!--   </listener> -->  
  <context-param>
    <!-- 标记当前系统的运行状态location：探查本地分支， container:不探查本地分支 -->  
    <param-name>TimssrunContext</param-name>  
    <param-value>location</param-value> 
  </context-param>  
  <!-- spring容器初始化  -->  
  <listener> 
    <listener-class>com.timss.framework.mvc.listener.TimssContextLoaderListener</listener-class> 
  </listener>  
  <!-- Spring框架启动时扫描beans（容器）的路径，  -->  
  <context-param> 
    <param-name>contextConfigLocation</param-name>  
    <param-value>classpath*:/config/context/applicationContext*.xml</param-value> 
  </context-param>  
  <!-- 在spring构建完容器之后初始化，必须实现TimssInitClassAfterContextBuildInterface接口多个启动类,分割 
  	命名规则为initClassAfterContextBuild-模块名称-config 如initClassAfterContextBuild-framework-config -->  
  <context-param> 
    <param-name>initClassAfterContextBuild-framework-config</param-name>  
    <param-value>com.timss.framework.mvc.context.TimssContextListener, com.timss.framework.exception.TimssExceptionFramework, com.timss.framework.mvc.listener.InitItcFramework, com.timss.framework.util.TimssFrameworkBranchUtil, com.timss.framework.annotation.context.AnnotationConfigContext</param-value> 
  </context-param>  
  <context-param> 
    <param-name>framework-logExceptionPath</param-name>  
    <param-value>config/exception/exception.xml</param-value> 
  </context-param>  
  <context-param> 
    <param-name>framework-logConfigPath</param-name>  
    <param-value>config/log/log4j.xml</param-value> 
  </context-param>  
  <!-- Timss框架启动时加载beans（容器）的路径. 命名规则为includeBeans-模块名称-config，如果包含多个，用,号分割，文档路径必须在/config/context/中 -->  
  <!--   <context-param> -->  
  <!--     <param-name>includeBeans-framework-config</param-name> -->  
  <!--     <param-value> -->  
  <!--     	/config/context/applicationContext-framework-base.xml, -->  
  <!--     	/config/context/applicationContext*.xml, -->  
  <!--     	/config/mvc/spring-core-mvc.xml -->  
  <!--     </param-value> -->  
  <!--   </context-param> -->  
  <servlet> 
    <servlet-name>springServlet</servlet-name>  
    <servlet-class>com.timss.framework.mvc.servlet.TimssDispatcherServlet</servlet-class>  
    <init-param> 
      <param-name>contextConfigLocation</param-name>  
      <param-value>classpath*:/config/mvc/spring*.xml</param-value> 
    </init-param>  
    <load-on-startup>1</load-on-startup> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>springServlet</servlet-name>  
    <url-pattern>*.do</url-pattern> 
  </servlet-mapping>  
  <!-- 权限模块servlet -->  
  <servlet> 
    <description/>  
    <display-name>RoleServlet</display-name>  
    <servlet-name>RoleServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.RoleServlet</servlet-class> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>RoleServlet</servlet-name>  
    <url-pattern>/role</url-pattern> 
  </servlet-mapping>  
  <servlet> 
    <description/>  
    <display-name>UserServlet</display-name>  
    <servlet-name>UserServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.UserServlet</servlet-class> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>UserServlet</servlet-name>  
    <url-pattern>/user</url-pattern> 
  </servlet-mapping>  
  <servlet> 
    <description/>  
    <display-name>LoginServlet</display-name>  
    <servlet-name>LoginServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.LoginServlet</servlet-class> 
  </servlet>  
  <servlet> 
    <description></description>  
    <display-name>GroupServlet</display-name>  
    <servlet-name>GroupServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.GroupServlet</servlet-class> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>LoginServlet</servlet-name>  
    <url-pattern>/login</url-pattern> 
  </servlet-mapping>  
  <servlet-mapping> 
    <servlet-name>GroupServlet</servlet-name>  
    <url-pattern>/group</url-pattern> 
  </servlet-mapping>  
  <servlet> 
    <description/>  
    <display-name>TreeServlet</display-name>  
    <servlet-name>TreeServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.TreeServlet</servlet-class> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>TreeServlet</servlet-name>  
    <url-pattern>/tree</url-pattern> 
  </servlet-mapping>  
  <servlet> 
    <description/>  
    <display-name>ResourceServlet</display-name>  
    <servlet-name>ResourceServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.ResourceServlet</servlet-class> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>ResourceServlet</servlet-name>  
    <url-pattern>/res</url-pattern> 
  </servlet-mapping>  
  <!-- 通用文件上传/下载接口 -->  
  <servlet> 
    <description/>  
    <display-name>FileUploadServlet</display-name>  
    <servlet-name>FileUploadServlet</servlet-name>  
    <servlet-class>com.yudean.itc.servlet.FileUploadServlet</servlet-class> 
  </servlet>  
  <servlet-mapping> 
    <servlet-name>FileUploadServlet</servlet-name>  
    <url-pattern>/upload</url-pattern> 
  </servlet-mapping>  
  <!-- 权限初始化 以及自动清理未关联附件 -->  
  <listener> 
    <listener-class>com.yudean.itc.servlet.ApplicationStartListener</listener-class> 
  </listener>  
  <!-- 欢迎页面 -->  
  <welcome-file-list> 
    <welcome-file>index_login.jsp</welcome-file> 
  </welcome-file-list>  
  <filter> 
    <filter-name>CharacterEncodingFilter</filter-name>  
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
    <init-param> 
      <param-name>encoding</param-name>  
      <param-value>UTF-8</param-value> 
    </init-param> 
  </filter>  
  <filter-mapping> 
    <filter-name>CharacterEncodingFilter</filter-name>  
    <url-pattern>/*</url-pattern> 
  </filter-mapping>  
  <error-page> 
    <error-code>404</error-code>  
    <location>/page/framework/error/error_404.jsp</location> 
  </error-page>  
  <error-page> 
    <error-code>500</error-code>  
    <location>/page/framework/error/error_500.jsp</location> 
  </error-page> 
</web-fragment>
